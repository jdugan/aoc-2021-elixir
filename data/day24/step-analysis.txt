1
  inp w
  eql x 0
  add y w
  add y 1
    { w: w1, x: 1, y: w1+1, z: w1+1 }
      z = w1 + 1
2
  inp w2      { w: w2, x: 1, y: w1+1, z: w1+1 }
  mul x 0     { w: w2, x: 0, y: w1+1, z: w1+1 }
  add x z     { w: w2, x: w1+1, y: w1+1, z: w1+1 }
  mod x 26    { w: w2, x: rem(w1+1, 26), y: w1+1, z: w1+1 }
  div z 1
  add x 11    { w: w2, x: rem(w1+1, 26) + 11, y: w1+1, z: w1+1 }
  eql x w     { w: w2, x: w2 == rem(w1+1, 26) + 11, y: w1+1, z: w1+1 }
  eql x 0     { w: w2, x: w2 != rem(w1+1, 26) + 11, y: w1+1, z: w1+1 }
  mul y 0     { w: w2, x: w2 == rem(w1+1, 26) + 11, y: 0, z: w1+1 }
  add y 25
  mul y x
  add y 1
  mul z y
  mul y 0
  add y w
  add y 11
  mul y x
  add z y
